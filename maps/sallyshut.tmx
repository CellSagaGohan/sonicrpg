<?xml version="1.0" encoding="UTF-8"?>
<map version="1.0" tiledversion="1.1.5" orientation="orthogonal" renderorder="right-down" width="25" height="20" tilewidth="32" tileheight="32" infinite="0" nextobjectid="12">
 <properties>
  <property name="onload" type="file" value="actions/knotholehut.lua"/>
  <property name="regionName" value="Sally's Hut"/>
 </properties>
 <tileset firstgid="1" name="knotholehut" tilewidth="32" tileheight="32" tilecount="812" columns="29">
  <image source="../art/tiles/knotholehutinterior.png" trans="000000" width="950" height="914"/>
 </tileset>
 <tileset firstgid="813" source="knothole.tsx"/>
 <tileset firstgid="4297" source="robotropolis.tsx"/>
 <tileset firstgid="7797" source="knotholeindoors.tsx"/>
 <layer name="floor" width="25" height="20">
  <data encoding="csv">
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,0,0,0,0,0,0,
0,0,0,0,0,0,30,31,32,33,34,35,36,37,38,39,40,41,42,0,0,0,0,0,0,
0,0,0,0,0,0,59,60,61,62,63,64,65,66,67,68,69,70,71,0,0,0,0,0,0,
0,0,0,0,0,0,88,89,90,91,92,93,94,95,96,97,98,99,100,0,0,0,0,0,0,
0,0,0,0,0,0,117,118,119,120,121,122,123,124,125,126,127,128,129,0,0,0,0,0,0,
0,0,0,0,0,0,146,147,148,149,150,151,152,153,154,155,156,157,158,0,0,0,0,0,0,
0,0,0,0,0,0,175,176,177,178,179,180,181,182,183,184,185,186,187,0,0,0,0,0,0,
0,0,0,0,0,0,204,205,206,207,208,209,210,211,212,213,214,215,216,0,0,0,0,0,0,
0,0,0,0,0,0,233,234,235,236,237,238,239,240,241,242,243,244,245,0,0,0,0,0,0,
0,0,0,0,0,0,262,263,264,265,266,267,268,269,270,271,272,273,274,0,0,0,0,0,0,
0,0,0,0,0,0,291,292,293,294,295,296,297,298,299,300,301,302,303,0,0,0,0,0,0,
0,0,0,0,0,0,320,321,322,323,324,325,326,327,328,329,330,331,332,0,0,0,0,0,0,
0,0,0,0,0,0,349,350,351,352,353,354,355,356,357,358,359,360,361,0,0,0,0,0,0,
0,0,0,0,0,0,378,379,380,381,382,383,384,385,386,387,388,389,390,0,0,0,0,0,0,
0,0,0,0,0,0,407,408,409,410,411,412,413,414,415,416,417,418,419,0,0,0,0,0,0,
0,0,0,0,0,0,436,437,438,439,440,441,442,443,444,445,446,447,448,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
</data>
 </layer>
 <layer name="above" width="25" height="20">
  <data encoding="csv">
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,115,0,0,0,0,0,0,0,251,252,253,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,144,0,0,0,0,0,0,0,280,281,282,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,173,0,0,0,0,0,0,168,309,310,311,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,338,339,340,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,367,368,369,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,396,397,398,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,425,426,427,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,255,256,257,258,259,0,0,0,0,0,366,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,284,285,286,287,288,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,313,314,315,316,317,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
</data>
 </layer>
 <layer name="above2" width="25" height="20">
  <data encoding="csv">
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,613,614,615,0,0,0,110,111,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,641,642,643,644,0,0,0,139,140,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,670,671,672,673,0,0,0,168,169,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,699,700,701,702,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,728,729,730,731,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
</data>
 </layer>
 <objectgroup name="objects">
  <object id="1" name="BigChest" type="BasicNPC" gid="6607" x="384" y="256" width="96" height="32">
   <properties>
    <property name="GreenLeaf" type="int" value="1"/>
    <property name="align" value="bottom_left"/>
    <property name="onInteract">local Serial = require &quot;actions/Serial&quot;
local MessageBox = require &quot;actions/MessageBox&quot;
local Menu = require &quot;actions/Menu&quot;
local Action = require &quot;actions/Action&quot;

local Transform = require &quot;util/Transform&quot;
local Layout = require &quot;util/Layout&quot;

return function(self)
    if GameState.leader == &quot;sonic&quot; then
        return MessageBox {message=&quot;Sonic: This is Sal's special chest, past down through the royal family for centuries... She says things you put in it will get a little better if you leave them in there... Yeah right!&quot;, blocking = true}
    elseif GameState.leader == &quot;sally&quot; then
        return Serial {
            MessageBox {message=&quot;Sally: I haven't read some of these in quite awhile... {p40}! {p20}'The adventures of Windom'! {p20}I remember my father reading this to me.&quot;, blocking = true},
            MessageBox {message=&quot;Sally: Maybe I could read it to Tails.&quot;, blocking = true}
        }
    end
    return Action()
end</property>
    <property name="sprite" type="file" value="../art/sprites/bigchest.png"/>
   </properties>
  </object>
  <object id="2" name="Door" type="Door" gid="6607" x="352" y="608" width="64" height="64">
   <properties>
    <property name="align" value="bottom_left"/>
    <property name="alignOffsetX" type="float" value="-20"/>
    <property name="alignOffsetY" type="float" value="-32"/>
    <property name="ghost" type="bool" value="true"/>
    <property name="key" value="down"/>
    <property name="orientation" value="up"/>
    <property name="scene" type="file" value="knothole.lua"/>
    <property name="spawn_point" value="SallyHutDoor"/>
    <property name="sprite" type="file" value="../art/sprites/hutdoor.png"/>
   </properties>
  </object>
  <object id="3" name="Spawn 1" type="Player" gid="4333" x="448" y="352" width="32" height="32">
   <properties>
    <property name="orientation" value="up"/>
   </properties>
  </object>
  <object id="4" name="SallysBed" type="BasicNPC" gid="6607" x="192" y="384" width="192" height="64">
   <properties>
    <property name="align" value="bottom_left"/>
    <property name="alignOffsetX" type="float" value="8"/>
    <property name="sprite" type="file" value="../art/sprites/sallybed.png"/>
   </properties>
  </object>
  <object id="5" name="SallysBookshelf" type="BasicNPC" gid="6607" x="512" y="512" width="64" height="32">
   <properties>
    <property name="align" value="bottom_left"/>
    <property name="onInteract">local Serial = require &quot;actions/Serial&quot;
local MessageBox = require &quot;actions/MessageBox&quot;
local Menu = require &quot;actions/Menu&quot;
local Action = require &quot;actions/Action&quot;

local Transform = require &quot;util/Transform&quot;
local Layout = require &quot;util/Layout&quot;

return function(self)
    if GameState.leader == &quot;sonic&quot; then
        return MessageBox {message=&quot;Sonic: Boooring.&quot;, blocking = true}
    elseif GameState.leader == &quot;sally&quot; then
        return Serial {
            MessageBox {message=&quot;Sally: I haven't read some of these in quite awhile... {p40}! {p20}'The adventures of Windom'! {p20}I remember my father reading this to me.&quot;, blocking = true},
            MessageBox {message=&quot;Sally: Maybe I could read it to Tails.&quot;, blocking = true}
        }
    end
    return Action()
end</property>
    <property name="sprite" type="file" value="../art/sprites/sallybookshelf.png"/>
   </properties>
  </object>
  <object id="7" name="SallysStool" type="BasicNPC" gid="6607" x="512" y="320" width="32" height="32">
   <properties>
    <property name="align" value="bottom_left"/>
    <property name="ghost" type="bool" value="true"/>
    <property name="onInteract">local Serial = require &quot;actions/Serial&quot;
local MessageBox = require &quot;actions/MessageBox&quot;
local Menu = require &quot;actions/Menu&quot;
local Action = require &quot;actions/Action&quot;

local Transform = require &quot;util/Transform&quot;
local Layout = require &quot;util/Layout&quot;

return function(self)
    if GameState.leader == &quot;sonic&quot; then
        return MessageBox {message=&quot;Sonic: I don't know how Sal makes sense of any of this techno junk!&quot;, textSpeed = 3, blocking = true}
    elseif GameState.leader == &quot;sally&quot; then
        return Menu {
            layout = Layout {
                {Layout.Text(&quot;What would you like to do?&quot;), selectable = false},
                {Layout.Text(&quot;Search databank&quot;), choose = function(menu)
                    menu:close()
                    self.scene:run {
                        menu,
                        MessageBox {
                            message = &quot;Databank is empty...&quot;,
                            blocking = true
                        }
                    }
                end},
                {Layout.Text(&quot;Logout&quot;), choose = function(menu) menu:close() end},
            },
            cancellable = true,
            transform = Transform(love.graphics.getWidth()/2, love.graphics.getHeight()/2 + 30),
            selectedRow = 2,
            blocking = true
        }
    end
    return Action()
end</property>
    <property name="sprite" type="file" value="../art/sprites/stool.png"/>
   </properties>
  </object>
  <object id="8" name="DeskUpper" type="BasicNPC" gid="6607" x="512" y="288" width="32" height="32">
   <properties>
    <property name="align" value="bottom_left"/>
    <property name="ghost" type="bool" value="true"/>
    <property name="sprite" type="file" value="../art/sprites/sallycomputerdeskupper.png"/>
   </properties>
  </object>
  <object id="9" name="DeskLower" type="BasicNPC" gid="6607" x="544" y="384" width="32" height="64">
   <properties>
    <property name="align" value="bottom_left"/>
    <property name="ghost" type="bool" value="true"/>
    <property name="sprite" type="file" value="../art/sprites/sallycomputerdesklower.png"/>
   </properties>
  </object>
  <object id="10" name="Brightness" type="BasicNPC" gid="6628" x="256" y="320" width="64" height="64">
   <properties>
    <property name="ghost" type="bool" value="true"/>
    <property name="notColliding">return function(self, player)
    player.lights[tostring(self)] = nil
end</property>
    <property name="whileColliding">return function(self, player)
    player.lights[tostring(self)] = true
end</property>
   </properties>
  </object>
  <object id="11" name="Brightness" type="BasicNPC" gid="6628" x="320" y="320" width="32" height="32">
   <properties>
    <property name="ghost" type="bool" value="true"/>
    <property name="notColliding">return function(self, player)
    player.lights[tostring(self)] = nil
end</property>
    <property name="whileColliding">return function(self, player)
    player.lights[tostring(self)] = true
end</property>
   </properties>
  </object>
 </objectgroup>
 <layer name="top" width="25" height="20">
  <data encoding="csv">
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,83,84,85,86,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,112,113,114,612,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,141,142,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,170,171,172,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,199,200,201,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,228,229,230,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
</data>
 </layer>
 <layer name="Collision" width="25" height="20" visible="0">
  <data encoding="csv">
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,119,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,119,119,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,119,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,119,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
</data>
 </layer>
 <layer name="BunnyExtCollision" width="25" height="20" visible="0">
  <data encoding="csv">
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
</data>
 </layer>
</map>
